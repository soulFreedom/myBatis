<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 读取配置的文件路径和名称 -->
	<properties resource="jdbc.properties"></properties>
	<settings>
		<!-- 打印SQL语句 -->
		<setting name="logImpl" value="STDOUT_LOGGING" />
		
		<!-- 打开延迟加载的开关 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 将积极加载修改为消极加载，即按需加载。 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	<!-- 别名定义 -->
	<typeAliases>
		<!-- 针对单个别名定义
			type：类型的路径
			alias:别名
		 -->
		<!-- <typeAlias type="org.guo.mybatis.modle.User" alias="user"/> -->
		
		<!-- 批量别名的定义 (更常用)
			指定包名：mybatis自动扫描包中的类，自动定义别名 ，别名就是类名(首字母大写或小写都可以)
		-->
		<package name="org.guo.mybatis.modle" />
	</typeAliases>
	
	<environments default="development">
		<environment id="development">
			<!-- 事务控制由Mybaits来完成 -->
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>

	<!-- 加载映射文件 -->
	<mappers>
		<!-- 通过resources方法 一次加载一个映射文件 -->
		<!-- <mapper resource="org/guo/mybatis/mapper/UserMapper.xml" /> -->
		
		<!-- 通过Mapper接口来加载映射文件
		遵循一些规范：需要将mapper接口的类名和mapper.xml映射文件名称保持一致，且在一个路径中。
		上面规范的前提是：使用的是mapper代理方法。
		 -->
		<!-- <mapper class="org.guo.mybatis.mapper.UserMapper"/> -->
		
		<!-- 批量加载mapper：推荐使用
		指定mapper接口的包名，mybatis会自动扫描包下面的所有的mapper接口进行加载。
		遵循一些规范：需要将mapper接口的类名和mapper.xml映射文件名称保持一致，且在一个路径中
		(备注：相同的classpath下的 src,resource下面不影响，视频中是都放置到一个文件夹下面，该项目是
		mapper接口和mapper.xml文件分开放置)。
		上面规范的前提是：使用的是mapper代理方法。
		 -->
		<package name="org.guo.mybatis.mapper"/>
		 
	</mappers>
</configuration>